@using Intl.Realty.Firm.Models.Models.ViewModel.SaleListingVM
@model List<SaleListingViewModel>

<div>
    <div class="row">
        <div class="col-md-12 d-flex justify-content-md-between align-items-center">
            <h1 class="text-blue mb-0">Sales Listing</h1>
            <div class="d-flex gap-4">
                <button id="btnMultipleDelete"
                        class="btn btn-danger d-none align-items-center"
                        data-bs-toggle="modal"
                        data-bs-target="#deleteConfirmModal">
                    <i data-feather="x" class="w-15px h-auto me-1"></i>
                    Delete
                </button>
                <a asp-action="Create"
                   class="btn btn-primary d-flex align-items-center">
                    <i data-feather="plus" class="w-15px h-auto me-1"></i>Add New
                </a>
            </div>
        </div>
    </div>
    <form method="post" asp-action="DeleteMultiple">
        <table id="modelTable" class="data-table table-striped table table-hover mt-4 w-100">
            <thead>
                <tr>
                    <th class="text-center align-middle w-5">
                        <input type="checkbox" class="column-checkbox" data-toggle="tooltip" data-bs-placement="left" title="Select all">
                    </th>
                    <th class="align-middle">
                        Deal ID
                    </th>
                    <th class="align-middle">
                        Property Address
                    </th>
                    <th class="align-middle">
                        Created At
                    </th>
                    <th class="align-middle">
                        Created By
                    </th>
                    <th class="align-middle">
                        Action
                    </th>
                </tr>
            </thead>
            <tbody>
                @{
                    var count = 0;
                }
                @foreach (var item in Model)
                {
                    count++;
                    <tr data-SaleListing-id="@item.Id">
                        <td class="text-center align-middle"> <input type="checkbox" class="row-checkbox" name="ids" value="@item.Id" /></td>
                        <td>
                            @{
                                @count.ToString()
                            }
                        </td>
                        <td class="align-middle">
                            @Html.DisplayFor(modelItem => @item.PropertyAddress)
                        </td>
                        <td class="align-middle">
                            @Html.DisplayFor(modelItem => @item.CreatedAt)
                        </td>
                        <td class="align-middle">
                            @Html.DisplayFor(modelItem => @item.CreatedBy)
                        </td>
                        <td class="align-middle">
                            <a href="#"
                               type="button"
                               asp-action="Edit"
                               asp-route-id="@item.Id"
                               style="text-decoration: none;">
                                <span class="px-1 pb-1 icon-green" title="Edit" data-position-id="@item.Id">
                                    <i data-feather="edit" class="data-feather-20"></i>
                                    Edit
                                </span>
                            </a>
                            <a href="#"
                               type="button"
                               data-bs-toggle="modal"
                            @* data-bs-target="#deletePositionModal" *@
                               onclick="OpenDeleteModal(@item.Id)"
                               style="text-decoration: none;">
                                <span class="px-1 pb-1 icon-red" title="delete" data-position-id="@item.Id">
                                    <i data-feather="trash-2" class="data-feather-20"></i>
                                    Delete
                                </span>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <nav class="table-pagination mt-5" id="paginationNav" style="display: none;">
            <ul class="pagination justify-content-center" id="pagination">
                <li class="page-item"><a class="page-link" href="#" id="prevPage">&laquo;</a></li>
                <li class="page-item"><a class="page-link" href="#" id="nextPage">&raquo;</a></li>
            </ul>
        </nav>
    </form>
</div>

<script>
    $(document).ready(function () {
        // PAGINATION
        const rowsPerPage = 2; // Number of rows per page
        const $table = $('#modelTable');
        const $tbody = $table.find('tbody');
        const $rows = $tbody.find('tr');
        const totalRows = $rows.length;
        let currentPage = 1;
        const totalPages = Math.ceil(totalRows / rowsPerPage);

        function displayRows() {
            const start = (currentPage - 1) * rowsPerPage;
            const end = start + rowsPerPage;
            $rows.each(function (index) {
                $(this).toggle(index >= start && index < end);
            });
        }

        function updatePaginationButtons() {
            $('#prevPage').parent().toggleClass('disabled', currentPage === 1 || totalPages === 0);
            $('#nextPage').parent().toggleClass('disabled', currentPage === totalPages || totalPages === 0);

            $('#pagination li.page-number').remove();
            for (let i = 1; i <= totalPages; i++) {
                const $li = $('<li class="page-item page-number"><a class="page-link" href="#">' + i + '</a></li>');
                $li.insertBefore($('#nextPage').parent());
            }

            $('#pagination li.page-number').removeClass('active').eq(currentPage - 1).addClass('active');
        }

        $(document).on('click', '#pagination li.page-number', function (event) {
            event.preventDefault();
            currentPage = parseInt($(this).text());
            displayRows();
            updatePaginationButtons();
        });

        $('#prevPage').click(function (event) {
            event.preventDefault();
            if (currentPage > 1) {
                currentPage--;
                displayRows();
                updatePaginationButtons();
            }
        });

        $('#nextPage').click(function (event) {
            event.preventDefault();
            if (currentPage < totalPages) {
                currentPage++;
                displayRows();
                updatePaginationButtons();
            }
        });

        // Initial display
        displayRows();
        updatePaginationButtons();

        // Show pagination if needed
        if (totalPages > 1) {
            $('#paginationNav').show();
            $('#prevPageItem').show();
            $('#nextPageItem').show();
        } else {
            $('#paginationNav').hide();
            $('#prevPageItem').hide();
            $('#nextPageItem').hide();
        }
        // END PAGINATION


        $('.data-table').DataTable({
            columnDefs: [
                { targets: [0], orderable: false }
            ],
            order: [[1, 'asc']]
        });

        $('#modelTable').on('click', 'tbody tr', function (event) {
            // Check if the clicked element is not the checkbox
            if (!$(event.target).is(':checkbox')) {
                var SaleListingId = $(this).data('SaleListing-id');
                window.location.href = '@Url.Action("Edit", "UserType")' + '?id=' + SaleListingId;
            }
        });

        $('.column-checkbox').change(function () {
            var isChecked = $(this).prop('checked');
            $('.row-checkbox').prop('checked', isChecked);
        });

        $('#modelTable').on('change', '.column-checkbox', function () {
            var isChecked = $(this).prop('checked');
            $('.row-checkbox').prop('checked', isChecked);

        });

        $('#modelTable').on('change', '.row-checkbox', function () {
            var isChecked = $(this).prop('checked');

            var allChecked = $('.row-checkbox').length === $('.row-checkbox:checked').length;
            $('.column-checkbox').prop('checked', allChecked);

        });

        $('#modelTable').on('change', '.row-checkbox, .column-checkbox', function () {
            var atLeastOneChecked = $('.row-checkbox:checked').length > 0;
            $('#btnMultipleDelete').toggleClass('d-none', !atLeastOneChecked);
            $('#btnMultipleDelete').toggleClass('d-flex', atLeastOneChecked);

            if ($(this).hasClass('column-checkbox')) {
                var isChecked = $(this).prop('checked');
                $('.row-checkbox').prop('checked', isChecked);
            }
        });

        $('.row-checkbox').change(function () {
            var allChecked = $('.row-checkbox').length === $('.row-checkbox:checked').length;
            $('.column-checkbox').prop('checked', allChecked);
        });

        if (getUrlParameter('deleteSuccess') === 'true') {
            toastr.success('Selection deleted successfully!', '', {
                timeOut: 10000,
                closeButton: true,
                onHidden: function () {
                    updateUrlParameter('deleteSuccess', '');
                }
            });
        }

        $('#btnConfirmDelete').click(function () {
            $('#deleteConfirmModal').modal('hide');
            window.location.href = window.location.href.split('?')[0] + '?deleteSuccess=true';
        });
    });

    $("#cancelBtn").click(function () {
        location.reload();
    });

    function OpenMultipleDeleteModal() {
        var selectedRows = getSelectedRows();
        var selectedIdsArray = getIdsFromSelectedRows(selectedRows);

        var allChecked = $('.row-checkbox').length === $('.row-checkbox:checked').length;
        $('.column-checkbox').prop('checked', allChecked);

        $('#DeleteMultipleModalContainer').load('/SaleListing/DeleteMultipleModal/', { ids: selectedIdsArray }, function () {
            $("#deleteConfirmModal").modal("show");
        });
    }

    function getIdsFromSelectedRows(selectedRows) {
        var ids = [];
        for (var i = 0; i < selectedRows.length; ++i)
            ids.push(selectedRows[i].value);
        return ids;
    }

    // function OpenCreateModal() {
    //     $('#CreateModalContainer').load('/SaleListing/Create/', function () {
    //         $("#createModal").modal("show");
    //     });
    // }
    // function OpenEditModal(id) {
    //     $('#EditModalContainer').load('/SaleListing/Edit/' + id, function () {
    //         $("#editModal").modal("show");
    //     });
    // }

    function OpenDeleteModal(id) {

        $('#DeleteModalContainer').load('/SaleListing/DeleteModal/' + id, function () {

            $("#deleteConfirmModal").modal("show");
        });
    }
</script>
