@using Intl.Realty.Firm.Models.Models.ViewModel.DocumentTypeAssignmentVM
@model EditDocumentTypeAssignmentViewModel
<div class="modal modal-sheet fade  bg-body-secondary p-4 py-md-5" id="editModal" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content rounded-4 shadow">
            <div class="modal-header p-5 pb-4 border-bottom-0">
                <h1 class="fw-bold mb-0 fs-2">Update DocumentTypeAssignment</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body p-5 pt-0 mt-2">
                <form class="m-0" id="EditForm" role="form" method="post">
                    <input type="hidden" class="form-control rounded-3" id="id" asp-for="Id">
                    <div class="form-floating mb-3">
                        <div class="form-group">
                            <label class="control-label fw-bolder">Status</label>
                            <select id="TransactionTypeDDL" name="TransactionTypeDDL" class="form-select">
                                @{
                                    @if (Model.TransactionTypeList != null)
                                    {
                                        @foreach (var transactionType in Model.TransactionTypeList)
                                        {
                                            if (transactionType.Id == Model.TransactionTypeId)
                                            {
                                                <option value="@transactionType.Id" selected>@transactionType.Description</option>
                                            }
                                            else
                                            {
                                                <option value="@transactionType.Id">@transactionType.Description</option>
                                            }
                                        }
                                    }
                                }
                            </select>
                            @if (!string.IsNullOrEmpty(ViewData.ModelState[nameof(Model.TransactionTypeId)]?.Errors.FirstOrDefault()?.ErrorMessage))
                            {
                                @Html.ValidationMessageFor(m => m.TransactionTypeId, "", new { @class = "error" })
                            }
                        </div>
                    </div>

                    <div class="form-floating mb-3">
                        <div class="form-group">
                            <label class="control-label fw-bolder">Status</label>
                            <select id="DocumentTypeDDL" name="DocumentTypeDDL" class="form-select">
                                @{
                                    @if (Model.DocumentTypeList != null)
                                    {
                                        @foreach (var documentType in Model.DocumentTypeList)
                                        {
                                            if (documentType.Id == Model.DocumentTypeId)
                                            {
                                                <option value="@documentType.Id" selected>@documentType.Description</option>
                                            }
                                            else
                                            {
                                                <option value="@documentType.Id">@documentType.Description</option>
                                            }
                                        }
                                    }
                                }
                            </select>
                            @if (!string.IsNullOrEmpty(ViewData.ModelState[nameof(Model.DocumentTypeId)]?.Errors.FirstOrDefault()?.ErrorMessage))
                            {
                                @Html.ValidationMessageFor(m => m.DocumentTypeId, "", new { @class = "error" })
                            }
                        </div>
                    </div>

                    <div class="form-check mb-5">
                        <input class="form-check-input" type="checkbox" value="" id="isActive" name="isActive" placeholder="" asp-for="IsActive">
                        <label class="form-check-label" for="isActive">
                            Is Active?
                        </label>
                    </div>

                    <div class="d-flex justify-content-center mt-3">
                        <button id="btnEdit" class="w-100 mb-2 mt-2 btn btn-lg rounded-3 btn-primary" type="button">Update</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $("#cancelBtn").click(function () {
        CloseModal();
    });

    $("#btnEdit").click(function () {
        UpdateDocumentTypeAssignment();
    });

    function UpdateDocumentTypeAssignment() {
        // debugger;
        var id = $('#id').val();
        var documentTypeId = $('#DocumentTypeDDL :selected').val();
        var transactionTypeId = $('#TransactionTypeDDL :selected').val()
        var viewModel = {
            Id: id,
            DocumentTypeId: documentTypeId,
            TransactionTypeId: transactionTypeId,
            IsActive: true
        };
        var parameters = { viewModel: viewModel };

        $.ajax({
            url: '/DocumentTypeAssignment/Edit/' + id,
            type: 'PUT',
            data: parameters,
            contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
            success: function (data) {
                // NOTE: TO DO better way of calling callback function from parent
                CloseModal();
                // Swal.fire({
                //     title: "Success!",
                //     icon: "success",
                //     confirmButtonText: "Ok",
                //     confirmButtonColor: '#14984a'
                // });
                window.location.reload()
                // $('#positionListPartialContainer').load('/Position/PositionListPartialView');

            }, error: function (e) {
                console.log(e);
            }
        });
    }

    function CloseModal() {
        $("#editModal").modal("hide");
        let elem = document.querySelector('#editModal');
        elem.parentNode.removeChild(elem);
    }
</script>
