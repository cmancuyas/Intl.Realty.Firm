@using Intl.Realty.Firm.Models.Models.ViewModel.UserTypeVM
@model IEnumerable<UserTypeViewModel>


<div>
    <form id="ListFormId" method="post">

        <div class="row">
            <div class="col-md-12 d-flex justify-content-md-between align-items-center">
                <h1 class="text-blue mb-0">UserTypes</h1>
                <div class="d-flex gap-2">
                    <a id="btnMultipleDelete"
                            class="btn btn-danger d-none align-items-center px-4"
                            data-toggle="tooltip"
                            data-bs-placement="left"
                            title="Delete"
                            onclick="OpenMultipleDeleteModal()">
                        <i data-feather="trash-2"></i> Delete
                    </a>

                    <a href="#"
                       class="btn btn-primary d-flex align-items-center"
                       type="button"
                       data-bs-toggle="modal"
                       onclick="OpenCreateModal()"
                       style="text-decoration: none;">
                        <span class="px-1 pb-1" title="create">
                            <i data-feather="plus" class="w-15px h-auto me-1"></i>
                            Add New
                        </span>
                    </a>
                </div>
            </div>
        </div>

        <div class="table-responsive mt-4">
            <table id="modelTable" class="data-table table-striped table table-hover w-100">
                <thead>
                    <tr>
                        <th class="text-lg-start align-middle w-5" width="5%">
                            <input id="select_all" type="checkbox" class="column-checkbox" data-toggle="tooltip" data-bs-placement="left" title="Select all">
                        </th>
                        <th class="text-lg-start align-middle">
                            @Html.DisplayNameFor(model => model.Code)
                        </th>
                        <th class="text-lg-start align-middle">
                            @Html.DisplayNameFor(model => model.Description)
                        </th>
                        <th class="text-lg-start align-middle">
                            Action
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <input type="hidden" name="id" id="@item.Id" />
                            <td class="text-lg-start align-middle" width="5%">
                                <input type="checkbox" class="row-checkbox" name="selectedRows" id="selectedRows" value="@item.Id" />
                            </td>
                            <td id="name" class="text-lg-start align-middle">
                                @Html.DisplayFor(modelItem => item.Code)
                            </td>
                            <td id="name" class="text-lg-start align-middle">
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                            <td class="text-lg-start align-middle">
                                <a href="#"
                                   class="cta-edit btn p-0 m-0"
                                   data-bs-toggle="modal"
                                   onclick="OpenEditModal(@item.Id)"
                                   style="text-decoration: none;">
                                    <i data-feather="edit" class="h-auto me-1"></i>Update
                                    @* <span class="px-1 pb-1" title="edit">
                                        <i data-feather="edit" class="h-auto me-1"></i>
                                    </span> *@
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </form>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        feather.replace();
        $('[data-toggle="tooltip"]').tooltip();

        $('.data-table').DataTable({
            columnDefs: [
                { targets: [0], orderable: false },
                { targets: [1, 2], orderable: true },
            ],
            order: [[1, 'asc']]
        });

        $('[id^=dt-search]').attr('placeholder', 'Search...').addClass('fst-italic');


        $('.column-checkbox').change(function () {
            var isChecked = $(this).prop('checked');
            $('.row-checkbox').prop('checked', isChecked);
        });

        $('#modelTable').on('change', '.column-checkbox', function () {
            var isChecked = $(this).prop('checked');
            $('.row-checkbox').prop('checked', isChecked);

        });

        $('#modelTable').on('change', '.row-checkbox', function () {
            var isChecked = $(this).prop('checked');

            var allChecked = $('.row-checkbox').length === $('.row-checkbox:checked').length;
            $('.column-checkbox').prop('checked', allChecked);

        });

        $('#modelTable').on('change', '.row-checkbox, .column-checkbox', function () {
            var atLeastOneChecked = $('.row-checkbox:checked').length > 0;
            $('#btnMultipleDelete').toggleClass('d-none', !atLeastOneChecked);
            $('#btnMultipleDelete').toggleClass('d-flex', atLeastOneChecked);

            if ($(this).hasClass('column-checkbox')) {
                var isChecked = $(this).prop('checked');
                $('.row-checkbox').prop('checked', isChecked);
            }
        });

        $('.row-checkbox').change(function () {
            var allChecked = $('.row-checkbox').length === $('.row-checkbox:checked').length;
            $('.column-checkbox').prop('checked', allChecked);
        });

        $('#btnConfirmDelete').click(function () {
            $('#deleteConfirmModal').modal('hide');
            window.location.href = window.location.href.split('?')[0] + '?deleteSuccess=true';
        });

        $("#cancelBtn").click(function () {
            CloseModal();
        });

        handleToastrNotification('addSuccess', 'New transaction type added successfully!');
        handleToastrNotification('editSuccess', 'Transaction type updated successfully!');
        handleToastrNotification('deleteSuccess', 'Transaction type deleted successfully!');
    });

    function CloseModal() {
        $("#deleteConfirmModal").modal("hide");
        let elem = document.querySelector('#deleteConfirmModal');
        elem.parentNode.removeChild(elem);
    }

    function OpenMultipleDeleteModal() {
        var selectedRows = getSelectedRows();
        var selectedIdsArray = getIdsFromSelectedRows(selectedRows);

        var allChecked = $('.row-checkbox').length === $('.row-checkbox:checked').length;
        $('.column-checkbox').prop('checked', allChecked);

        $('#DeleteMultipleModalContainer').load('/UserType/DeleteMultipleModal/', { ids: selectedIdsArray }, function () {
            $("#deleteConfirmModal").modal("show");
        });
    }

    function getIdsFromSelectedRows(selectedRows) {
        var ids = [];
        for (var i = 0; i < selectedRows.length; ++i)
            ids.push(selectedRows[i].value);
        return ids;
    }
    function OpenCreateModal() {
        $('#CreateModalContainer').load('/UserType/CreateModal/', function () {
            $("#createModal").modal("show");
        });
    }
    function OpenEditModal(id) {
        $('#EditModalContainer').load('/UserType/EditModal/' + id, function () {
            $("#editModal").modal("show");
        });
    }
    function OpenDeleteModal(id) {

        $('#DeleteModalContainer').load('/UserType/DeleteModal/' + id, function () {

            $("#deleteConfirmModal").modal("show");
        });
    }
    function ClearSearch() {
        $("#dt-search-0").val("").keyup();
    }

    function getSelectedRows() {
        var table = $('#modelTable').dataTable();
        selectedRows = table.find('input[name="selectedRows"]:checked').serializeArray();

        return selectedRows;
    }
</script>